name: Image Deploy

on:
  push:
    tags:
      - 'v*'

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: get version
      id: get-version
      run: |
        echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
    - name: login to docker hub 
      uses: docker/login-action@v2
      with: 
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: create frontend image 
      run: |
        cd frontend
        docker build -t frontend . 

    - name: push image 
      run: |
        docker tag frontend maheshkasbe/frontend:${{ steps.get-version.outputs.VERSION }}
        docker push maheshkasbe/frontend:${{ steps.get-version.outputs.VERSION }}

    - name: create bug-service image
      run: | 
        cd bug-service
        docker build -t bug-service .    
    - name: push image 
      run: |
        docker tag bug-service maheshkasbe/bug-service:${{ steps.get-version.outputs.VERSION }}
        docker push maheshkasbe/bug-service:${{ steps.get-version.outputs.VERSION }}

    - name: create project-service image
      run: | 
        cd project-service
        docker build -t project-service . 
    - name: push image 
      run: |
        docker tag project-service maheshkasbe/project-service:${{ steps.get-version.outputs.VERSION }}
        docker push maheshkasbe/project-service:${{ steps.get-version.outputs.VERSION }}

    - name: create user-service image
      run: | 
        cd user-service
        docker build -t user-service . 
    - name: push image 
      run: |
        docker tag user-service maheshkasbe/user-service:${{ steps.get-version.outputs.VERSION }}
        docker push maheshkasbe/user-service:${{ steps.get-version.outputs.VERSION }}

    - name: create apiGateway image
      run: | 
        cd apiGateway
        docker build -t apigateway . 
    - name: push image 
      run: |
        docker tag apigateway maheshkasbe/apigateway:${{ steps.get-version.outputs.VERSION }}
        docker push maheshkasbe/apigateway:${{ steps.get-version.outputs.VERSION }}

    - name: create serviceRegistry image
      run: | 
        cd serviceRegistry
        docker build -t serviceregistry . 
    - name: push image 
      run: |
        docker tag serviceregistry maheshkasbe/serviceregistry:${{ steps.get-version.outputs.VERSION }}
        docker push maheshkasbe/serviceregistry:${{ steps.get-version.outputs.VERSION }}

    - name: install yq 
      uses: mikefarah/yq@v4.15.1

    - name: update yaml file
      run: |
        cd k8s
        yq e -i '.spec.template.spec.containers[0].image="maheshkasbe/frontend:${{ steps.get-version.outputs.VERSION }}"' frontend.yaml
        yq e -i '.spec.template.spec.containers[0].image="maheshkasbe/bug-service:${{ steps.get-version.outputs.VERSION }}"' bug-service.yaml
        yq e -i '.spec.template.spec.containers[0].image="maheshkasbe/project-service:${{ steps.get-version.outputs.VERSION }}"' project-service.yaml
        yq e -i '.spec.template.spec.containers[0].image="maheshkasbe/user-service:${{ steps.get-version.outputs.VERSION }}"' user-service.yaml
        yq e -i '.spec.template.spec.containers[0].image="maheshkasbe/apigateway:${{ steps.get-version.outputs.VERSION }}"' api-gateway.yaml
        yq e -i '.spec.template.spec.containers[0].image="maheshkasbe/serviceregistry:${{ steps.get-version.outputs.VERSION }}"' service-registry.yaml
    
    - name: Commit and push changes
      uses: dmnemec/copy_file_to_another_repo_action@main
      env:
        API_TOKEN_GITHUB: ${{ secrets.PAT }}
      with: 
        source_folder: k8s
        destination_repo: Mahesh-Kasabe/devops-project
        destination_branch: master
        destination_folder: k8s
        user_email: maheshkasbe010@gmail.com
        user_name: Mahesh-Kasabe
        commit_message: update image version ${{ steps.get_version.outputs.VERSION }} in yml file
